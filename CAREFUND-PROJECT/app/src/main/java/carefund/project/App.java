/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package carefund.project;

import carefund.project.controller.CarefundController;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class App extends Application {

    private Stage primaryStage;
    private Scene homeScene, loginScene, registerScene, mainScene, donationScene, profileScene, historyScene;
    CarefundController cf = new CarefundController();

    @Override
    public void start(Stage primaryStage) {
        this.primaryStage = primaryStage;
        primaryStage.setTitle("Aplikasi");

        createHomeScene();
        createLoginScene();
        createRegisterScene();
        createMainScene();
        createDonationScene();
        createProfileScene();
        createHistoryScene();

        // Tambahkan CSS ke semua scene
        String cssPath = getClass().getResource("/style.css").toExternalForm();
        homeScene.getStylesheets().add(cssPath);
        loginScene.getStylesheets().add(cssPath);
        registerScene.getStylesheets().add(cssPath);
        mainScene.getStylesheets().add(cssPath);
        donationScene.getStylesheets().add(cssPath);
        profileScene.getStylesheets().add(cssPath);
        historyScene.getStylesheets().add(cssPath);

        primaryStage.setScene(homeScene);
        primaryStage.show();
    }

    private void createHomeScene() {
        Button loginButton = new Button("Login");
        Button registerButton = new Button("Register");

        loginButton.setOnAction(e -> primaryStage.setScene(loginScene));
        registerButton.setOnAction(e -> primaryStage.setScene(registerScene));

        VBox layout = new VBox(20, loginButton, registerButton);
        layout.setAlignment(Pos.CENTER);
        homeScene = new Scene(layout, 300, 250);
    }

    private void createLoginScene() {
        Label usernameLabel = new Label("Username:");
        TextField usernameField = new TextField();
        Label passwordLabel = new Label("Password:");
        TextField passwordField = new TextField();
        Button loginButton = new Button("Login");
        Button backButton = new Button("Back");

        // Tambahkan style class ke elemen-elemen UI
        usernameLabel.getStyleClass().add("label");
        usernameField.getStyleClass().add("text-field");
        passwordLabel.getStyleClass().add("label");
        passwordField.getStyleClass().add("text-field");
        loginButton.getStyleClass().add("button");
        backButton.getStyleClass().add("button");

        backButton.setOnAction(e -> primaryStage.setScene(homeScene));

        // Logika validasi login
        loginButton.setOnAction(e -> {
            String username = usernameField.getText();
            String password = passwordField.getText();

            if (cf.login(username, password)) {
                primaryStage.setScene(mainScene); // Arahkan ke mainScene jika login valid
            } else {
                // Tampilkan pesan error (misalnya, menggunakan Alert)
                Alert alert = new Alert(AlertType.ERROR);
                alert.setTitle("Login Error");
                alert.setHeaderText(null);
                alert.setContentText("Invalid username or password");
                alert.showAndWait();
            }
        });

        GridPane grid = new GridPane();
        grid.setAlignment(Pos.CENTER);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(25, 25, 25, 25));
        grid.getStyleClass().add("grid-pane");

        grid.add(usernameLabel, 0, 0);
        grid.add(usernameField, 1, 0);
        grid.add(passwordLabel, 0, 1);
        grid.add(passwordField, 1, 1);
        grid.add(loginButton, 1, 2);
        grid.add(backButton, 0, 2);

        loginScene = new Scene(grid, 300, 250);
    }

    // Metode untuk validasi kredensial
    // private boolean isValidCredentials(String username, String password) {
    //     try (BufferedReader br = new BufferedReader(new FileReader("users.txt"))) {
    //         String line;
    //         while ((line = br.readLine()) != null) {
    //             String[] parts = line.split(",");
    //             if (parts[0].equals(username) && parts[1].equals(password)) {
    //                 return true; // Login valid
    //             }
    //         }
    //     } catch (IOException e) {
    //         e.printStackTrace();
    //     }
    //     return false; // Login tidak valid
    // }

    private void createRegisterScene() {
        Label usernameLabel = new Label("Username:");
        TextField usernameField = new TextField();
        Label emailLabel = new Label("Email:");
        TextField emailField = new TextField();
        Label passwordLabel = new Label("Password:");
        TextField passwordField = new TextField();
        Button registerButton = new Button("Register");
        Button backButton = new Button("Back");

        // Tambahkan style class ke elemen-elemen UI
        usernameLabel.getStyleClass().add("label");
        usernameField.getStyleClass().add("text-field");
        emailLabel.getStyleClass().add("label");
        emailField.getStyleClass().add("text-field");
        passwordLabel.getStyleClass().add("label");
        passwordField.getStyleClass().add("text-field");
        registerButton.getStyleClass().add("button");
        backButton.getStyleClass().add("button");

        backButton.setOnAction(e -> primaryStage.setScene(homeScene));

        registerButton.setOnAction(e -> {
            String username = usernameField.getText();
            String email = emailField.getText();
            String password = passwordField.getText();

            if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {
                return;
            }
            String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
            if (!email.matches(emailRegex)) {
                return;
            }
            cf.register(usernameField.getText(), emailField.getText(), passwordField.getText());
            primaryStage.setScene(loginScene);
        });

        GridPane grid = new GridPane();
        grid.setAlignment(Pos.CENTER);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(25, 25, 25, 25));
        grid.getStyleClass().add("grid-pane");

        grid.add(usernameLabel, 0, 0);
        grid.add(usernameField, 1, 0);
        grid.add(emailLabel, 0, 1);
        grid.add(emailField, 1, 1);
        grid.add(passwordLabel, 0, 2);
        grid.add(passwordField, 1, 2);
        grid.add(registerButton, 1, 3);
        grid.add(backButton, 0, 3);

        registerScene = new Scene(grid, 350, 300);
    }

    private void createMainScene() {
        Button donationButton = new Button("Donation");
        Button profileButton = new Button("Profile");
        Button historyButton = new Button("History");

        donationButton.setOnAction(e -> primaryStage.setScene(donationScene));
        profileButton.setOnAction(e -> primaryStage.setScene(profileScene));
        historyButton.setOnAction(e -> primaryStage.setScene(historyScene));

        donationButton.getStyleClass().add("button");
        profileButton.getStyleClass().add("button");
        historyButton.getStyleClass().add("button");

        VBox layout = new VBox(20, donationButton, profileButton, historyButton);
        layout.setAlignment(Pos.CENTER);
        mainScene = new Scene(layout, 300, 250);
    }

    private void createDonationScene() {
        Label donationLabel = new Label("Donation Scene");
        donationLabel.getStyleClass().add("label");

        VBox layout = new VBox(20, donationLabel);
        layout.setAlignment(Pos.CENTER);
        donationScene = new Scene(layout, 300, 250);
    }

    private void createProfileScene() {
        Label profileLabel = new Label("Profile Scene");
        profileLabel.getStyleClass().add("label");

        VBox layout = new VBox(20, profileLabel);
        layout.setAlignment(Pos.CENTER);
        profileScene = new Scene(layout, 300, 250);
    }

    private void createHistoryScene() {
        Label historyLabel = new Label("History Scene");
        historyLabel.getStyleClass().add("label");

        VBox layout = new VBox(20, historyLabel);
        layout.setAlignment(Pos.CENTER);
        historyScene = new Scene(layout, 300, 250);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
